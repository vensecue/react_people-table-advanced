{"version":3,"sources":["utils/searchHelper.ts","components/SearchLink.tsx","components/PeopleFilters.tsx","components/Loader/Loader.tsx","components/PeopleTable.tsx","api.ts","components/PeoplePage.tsx","components/Navbar.tsx","App.tsx","index.tsx"],"names":["getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","SearchLink","children","params","props","useSearchParams","searchParams","to","search","PeopleFilters","setSearchParams","selectedGender","get","allCenturies","getAll","query","centurySetter","century","includes","filter","age","className","cn","sex","onChange","e","newValue","target","type","placeholder","centuries","length","Loader","PeopleTable","people","sortBy","sortDirection","slug","useParams","setSortParams","param","filteredPeople","peop","sort","gender","a","b","born","died","name","localeCompare","person","String","Math","floor","toLowerCase","motherName","fatherName","filterPeople","onClick","map","mother","father","API_URL","wait","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePage","useState","setPeople","loading","setLoading","loadingError","setLoadingError","fetchData","getPeople","result","find","human","catch","finally","useEffect","Navbar","role","isActive","App","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.9deb0371.chunk.js","sourcesContent":["export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\n/**\n * This function prepares a correct search string\n * from a given currentParams and paramsToUpdate.\n */\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams, // it's our custom type\n): string {\n  // copy currentParams by creating new object from a string\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  // Here is the example of paramsToUpdate\n  // {\n  //   sex: 'm',                ['sex', 'm']\n  //   order: null,             ['order', null]\n  //   centuries: ['16', '19'], ['centuries', ['16', '19']]\n  // }\n  //\n  // - params with the `null` value are deleted;\n  // - string value is set to given param key;\n  // - array of strings adds several params with the same key;\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        // we delete the key to remove old values\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  // we return a string to use it inside links\n  return newParams.toString();\n}\n","import { Link, LinkProps, useSearchParams } from 'react-router-dom';\nimport { getSearchWith, SearchParams } from '../utils/searchHelper';\n\n/**\n * To replace the the standard `Link` we take all it props except for `to`\n * along with the custom `params` prop that we use for updating the search\n */\ntype Props = Omit<LinkProps, 'to'> & {\n  params: SearchParams,\n};\n\n/**\n * SearchLink updates the given `params` in the search keeping the `pathname`\n * and the other existing search params (see `getSearchWith`)\n */\nexport const SearchLink: React.FC<Props> = ({\n  children, // this is the content between the open and closing tags\n  params, // the params to be updated in the `search`\n  ...props // all usual Link props like `className`, `style` and `id`\n}) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      // to={{ search: getSearchWith(searchParams, { query: 'sdf' }) }}\n      // to={{ search: getSearchWith(searchParams, { query: null }) }}\n      // to={{ search: getSearchWith(searchParams, { centuries: ['16', '18'] }) }}\n      to={{\n        search: getSearchWith(searchParams, params),\n      }}\n      {...props} // copy all the other props\n    >\n      {children}\n    </Link>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { SearchLink } from './SearchLink';\n\nexport const PeopleFilters = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const selectedGender = searchParams.get('sex');\n  const allCenturies = searchParams.getAll('centuries');\n  const query = searchParams.get('query');\n\n  const centurySetter = (century: string) => {\n    if (allCenturies.includes(century)) {\n      return allCenturies.filter(age => age !== century);\n    }\n\n    return [...allCenturies, century];\n  };\n\n  const handleQueryChange = (newValue: string) => {\n    if (newValue === '') {\n      searchParams.delete('query');\n    } else {\n      searchParams.set('query', newValue);\n    }\n\n    setSearchParams(searchParams);\n  };\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        <SearchLink\n          className={cn({ 'is-active': selectedGender === null })}\n          params={{ sex: null }}\n        >\n          All\n\n        </SearchLink>\n        <SearchLink\n          className={cn({ 'is-active': selectedGender === 'm' })}\n          params={{ sex: 'm' }}\n        >\n          Male\n\n        </SearchLink>\n        <SearchLink\n          className={cn({ 'is-active': selectedGender === 'f' })}\n          params={{ sex: 'f' }}\n        >\n          Female\n\n        </SearchLink>\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            value={query || ''}\n            onChange={(e) => handleQueryChange(e.target.value)}\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n          />\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            <SearchLink\n              data-cy=\"century\"\n              className={cn('button mr-1',\n                { 'is-info': allCenturies.includes('16') })}\n              params={{\n                centuries: centurySetter('16'),\n              }}\n            >\n              16\n            </SearchLink>\n\n            <SearchLink\n              data-cy=\"century\"\n              className={cn('button mr-1',\n                { 'is-info': allCenturies.includes('17') })}\n              params={{\n                centuries: centurySetter('17'),\n              }}\n            >\n              17\n            </SearchLink>\n\n            <SearchLink\n              data-cy=\"century\"\n              className={cn('button mr-1',\n                { 'is-info': allCenturies.includes('18') })}\n              params={{\n                centuries: centurySetter('18'),\n              }}\n            >\n              18\n            </SearchLink>\n\n            <SearchLink\n              data-cy=\"century\"\n              className={cn('button mr-1',\n                { 'is-info': allCenturies.includes('19') })}\n              params={{\n                centuries: centurySetter('19'),\n              }}\n            >\n              19\n            </SearchLink>\n\n            <SearchLink\n              data-cy=\"century\"\n              className={cn('button mr-1',\n                { 'is-info': allCenturies.includes('20') })}\n              params={{\n                centuries: centurySetter('20'),\n              }}\n            >\n              20\n            </SearchLink>\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <SearchLink\n              data-cy=\"centuryALL\"\n              className={cn('button is-success',\n                { 'is-outlined': allCenturies.length !== 0 })}\n              params={{\n                centuries: null,\n              }}\n            >\n              All\n            </SearchLink>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <SearchLink\n          className=\"button is-link is-outlined is-fullwidth\"\n          params={{\n            centuries: null,\n            query: null,\n            sex: null,\n          }}\n        >\n          Reset all filters\n        </SearchLink>\n      </div>\n    </nav>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport { Link, useParams, useSearchParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../types';\n\ntype Props = {\n  people: Person[];\n};\n\nconst filterPeople = (peop: Person[],\n  sort: string | null,\n  sortDirection: string | null,\n  gender: string | null,\n  centuries: string[],\n  query: string | null) => {\n  let filteredPeople: Person[] = [...peop];\n\n  switch (sort) {\n    case 'born':\n      if (sortDirection === 'desc') {\n        filteredPeople.sort((a, b) => b.born - a.born);\n      } else {\n        filteredPeople.sort((a, b) => a.born - b.born);\n      }\n\n      break;\n    case 'died':\n      if (sortDirection === 'desc') {\n        filteredPeople.sort((a, b) => b.died - a.died);\n      } else {\n        filteredPeople.sort((a, b) => a.died - b.died);\n      }\n\n      break;\n    case 'name':\n      if (sortDirection === 'desc') {\n        filteredPeople.sort((a, b) => b.name.localeCompare(a.name));\n      } else {\n        filteredPeople.sort((a, b) => a.name.localeCompare(b.name));\n      }\n\n      break;\n    case 'sex':\n      if (sortDirection === 'desc') {\n        filteredPeople.sort((a, b) => b.sex.localeCompare(a.sex));\n      } else {\n        filteredPeople.sort((a, b) => a.sex.localeCompare(b.sex));\n      }\n\n      break;\n    case null:\n    default:\n  }\n\n  if (centuries.length > 0) {\n    filteredPeople = filteredPeople.filter(person => centuries.includes(\n      String(Math.floor(person.born / 100) + 1),\n    ));\n  }\n\n  if (query !== null) {\n    filteredPeople = filteredPeople.filter(person => person.name.toLowerCase()\n      .includes(query.toLowerCase())\n    || person.motherName?.toLowerCase().includes(query.toLowerCase())\n    || person.fatherName?.toLowerCase().includes(query.toLowerCase()));\n  }\n\n  switch (gender) {\n    case 'm':\n      return filteredPeople.filter(person => person.sex === 'm');\n    case 'f':\n      return filteredPeople.filter(person => person.sex === 'f');\n    case null:\n    default:\n  }\n\n  return filteredPeople;\n};\n\nexport const PeopleTable = ({ people }: Props) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const sortBy = searchParams.get('sort');\n  const sortDirection = searchParams.get('order');\n  const selectedGender = searchParams.get('sex');\n  const allCenturies = searchParams.getAll('centuries');\n  const query = searchParams.get('query');\n  const { slug } = useParams();\n\n  const setSortParams = (param: string) => {\n    if (searchParams.get('sort') !== null\n    && searchParams.get('sort') !== param) {\n      searchParams.set('sort', param);\n    } else if (searchParams.get('sort') === null) {\n      searchParams.set('sort', param);\n    } else if (searchParams.get('sort')\n    === param && searchParams.get('order') === null) {\n      searchParams.append('order', 'desc');\n    } else {\n      searchParams.delete('order');\n      searchParams.delete('sort');\n    }\n\n    setSearchParams(searchParams);\n  };\n\n  const filteredPeople = filterPeople(people,\n    sortBy,\n    sortDirection,\n    selectedGender,\n    allCenturies,\n    query);\n\n  return (\n    <>\n      {filteredPeople.length === 0\n        ? <p>There are no people matching the current search criteria</p> : (\n          <table\n            data-cy=\"peopleTable\"\n            className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n          >\n            <thead>\n              <tr>\n                <th>\n                  <span className=\"is-flex is-flex-wrap-nowrap\">\n                    Name\n                    <a onClick={() => setSortParams('name')}>\n                      <span className=\"icon\">\n                        <i className={cn({\n                          'fas fa-sort': sortBy !== 'name',\n                          'fas fa-sort-up': sortBy === 'name'\n                      && sortDirection !== 'desc',\n                          'fas fa-sort-down': sortBy === 'name'\n                      && sortDirection === 'desc',\n                        })}\n                        />\n                      </span>\n                    </a>\n                  </span>\n                </th>\n\n                <th>\n                  <span className=\"is-flex is-flex-wrap-nowrap\">\n                    Sex\n                    <a onClick={() => setSortParams('sex')}>\n                      <span className=\"icon\">\n                        <i className={cn({\n                          'fas fa-sort': sortBy !== 'sex',\n                          'fas fa-sort-up': sortBy === 'sex'\n                      && sortDirection !== 'desc',\n                          'fas fa-sort-down': sortBy === 'sex'\n                      && sortDirection === 'desc',\n                        })}\n                        />\n                      </span>\n                    </a>\n                  </span>\n                </th>\n\n                <th>\n                  <span className=\"is-flex is-flex-wrap-nowrap\">\n                    Born\n                    <a onClick={() => setSortParams('born')}>\n                      <span className=\"icon\">\n                        <i className={cn({\n                          'fas fa-sort': sortBy !== 'born',\n                          'fas fa-sort-up': sortBy === 'born'\n                      && sortDirection !== 'desc',\n                          'fas fa-sort-down': sortBy === 'born'\n                      && sortDirection === 'desc',\n                        })}\n                        />\n                      </span>\n                    </a>\n                  </span>\n                </th>\n\n                <th>\n                  <span className=\"is-flex is-flex-wrap-nowrap\">\n                    Died\n                    <a onClick={() => setSortParams('died')}>\n                      <span className=\"icon\">\n                        <i className={cn({\n                          'fas fa-sort': sortBy !== 'died',\n                          'fas fa-sort-up': sortBy === 'died'\n                      && sortDirection !== 'desc',\n                          'fas fa-sort-down': sortBy === 'died'\n                      && sortDirection === 'desc',\n                        })}\n                        />\n                      </span>\n                    </a>\n                  </span>\n                </th>\n\n                <th>Mother</th>\n                <th>Father</th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {filteredPeople.map((person) => (\n\n                <tr\n                  data-cy=\"person\"\n                  className={cn({\n                    'has-background-warning': slug === person.slug,\n                  })}\n                >\n                  <td>\n                    <Link\n                      className={cn({\n                        'has-text-danger': person.sex === 'f',\n                      })}\n                      to={`${person.slug}?${searchParams.toString()}`}\n                    >\n                      {person.name}\n                    </Link>\n                  </td>\n\n                  <td>{person.sex}</td>\n                  <td>{person.born}</td>\n                  <td>{person.died}</td>\n                  <td>\n                    {person.mother\n                      ? (\n                        <Link\n                          className=\"has-text-danger\"\n                          to={`${person.mother.slug}?${searchParams.toString()}`}\n                        >\n                          {person.motherName}\n                        </Link>\n                      )\n                      : person.motherName || '-'}\n\n                  </td>\n                  <td>\n                    {person.father\n                      ? (\n                        <Link\n                          to={`${person.father.slug}?${searchParams.toString()}`}\n                        >\n                          {person.fatherName}\n                        </Link>\n                      )\n                      : person.fatherName || '-'}\n\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n\n    </>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { useEffect, useState } from 'react';\nimport { PeopleFilters } from './PeopleFilters';\nimport { Loader } from './Loader';\nimport { PeopleTable } from './PeopleTable';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\n\nconst preparePeople = (peop: Person[]) => {\n  return peop.map(person => {\n    const mother = peop.find(human => human.name === person.motherName);\n    const father = peop.find(human => human.name === person.fatherName);\n\n    return ({\n      ...person,\n      mother,\n      father,\n    });\n  });\n};\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[] | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [loadingError, setLoadingError] = useState(false);\n\n  const fetchData = () => {\n    getPeople()\n      .then((result) => {\n        setPeople(preparePeople(result));\n      })\n      .catch(() => {\n        setLoadingError(true);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          <div className=\"column is-7-tablet is-narrow-desktop\">\n            {!loading && <PeopleFilters />}\n          </div>\n\n          <div className=\"column\">\n            <div className=\"box table-container\">\n              {loading && <Loader />}\n\n              {loadingError && (\n                <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                  Something went wrong\n                </p>\n              )}\n\n              {people?.length === 0 && (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                </p>\n              ) }\n\n              {people && <PeopleTable people={people} />}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import cn from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={({ isActive }) => cn('navbar-item',\n              { 'has-background-grey-lighter': isActive })}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            aria-current=\"page\"\n            className={({ isActive }) => cn('navbar-item',\n              { 'has-background-grey-lighter': isActive })}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport { PeoplePage } from './components/PeoplePage';\nimport { Navbar } from './components/Navbar';\n\nimport './App.scss';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n            <Route\n              path=\"*\"\n              element={<h1 className=\"title\">Page not found</h1>}\n            />\n            <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n            <Route path=\"/people\" element={<PeoplePage />}>\n              <Route path=\":slug\" element={<PeoplePage />} />\n            </Route>\n          </Routes>\n\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}